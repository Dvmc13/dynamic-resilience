spring:
  application:
    name: frontend
  cloud:
    config:
      fail-fast: true
      retry:
        initial-interval: 1000
        max-attempts: 6
        multiplier: 1.1

server:
  port: 8080
  tomcat:
    max-threads: 200
    max-connections: 1000
    connection-timeout: 5s

resilience:
  gateway:
    services:
      frontend:
        host: localhost
        port: 8080
        circuitBreaker:
          enabled: true
          forcedState: ${FRONTEND_CIRCUIT_FORCED_STATE:}
          metrics:
            enabled: true
          slidingWindowSize: 100
          failureRateThreshold: 50
          waitDurationInOpenState: 30
          permittedCallsInHalfOpen: 5
          automaticTransitionFromOpenToHalfOpenEnabled: true
          minimumNumberOfCalls: 10
          fallbackUri: forward:/fallback/frontend
        retry:
          enabled: true
          maxAttempts: 3
          waitDuration: 500ms
          enableExponentialBackoff: true
          exponentialBackoffMultiplier: 2
          fallbackUri: forward:/fallback/retry-exhausted
        rateLimiter:
          enabled: true
          limitForPeriod: 20
          limitRefreshPeriod: 1s
          timeoutDuration: 200ms
          fallbackUri: forward:/fallback/rate-limited
        bulkhead:
          enabled: true
          maxConcurrentCalls: 100
          maxWaitDuration: 50ms
          fallbackUri: forward:/fallback/bulkhead-full

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
      group:
        readiness:
          include: db,diskSpace
        liveness:
          include: ping
  metrics:
    tags:
      application: frontend
      environment: default
    export:
      prometheus:
        enabled: true
