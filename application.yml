spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      enabled: true
    inetutils:
      preferredNetworks: 127.0.0.1
      ignoredInterfaces: eth0
  application:
    name: global-config

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true
    prometheus:
      enabled: true

# ConfiguraciÃ³n de Resilience4j: valores por defecto para cada servicio,
# los cuales podrÃ¡n ser sobreescritos dinÃ¡micamente mediante variables de entorno.
resilience4j:
  circuitbreaker:
    instances:
      frontend:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000ms
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000ms
        metrics:
          enabled: true
        forcedState: ${FRONTEND_CIRCUIT_FORCED_STATE:}
  retry:
    instances:
      frontend:
        maxAttempts: ${FRONTEND_RETRY_MAX_ATTEMPTS:3}
        waitDuration: ${FRONTEND_RETRY_WAIT_DURATION:500ms}
        metrics:
          enabled: true
      # Si es necesario, puedes definir retry para otros servicios aquÃ­.
  bulkhead:
    instances:
      "*":
        metrics:
          enabled: true
  ratelimiter:
    instances:
      "*":
        metrics:
          enabled: true

logging:
  level:
    root: INFO
    com.example.resilience_library: DEBUG
