spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      enabled: true
    inetutils:
      preferredNetworks: 127.0.0.1
      ignoredInterfaces: eth0
  application:
    name: global-config

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true
    prometheus:
      enabled: true

# Configuración de Resilience4j por defecto para cada servicio.
# En la nueva arquitectura, la evaluación interna se deshabilita a favor de la lógica externa (Alertmanager/webhooks).
resilience4j:
  circuitbreaker:
    instances:
      frontend:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000ms
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000ms
        metrics:
          enabled: true
        forcedState: ${FRONTEND_CIRCUIT_FORCED_STATE:}
  retry:
    instances:
      frontend:
        maxAttempts: ${FRONTEND_RETRY_MAX_ATTEMPTS:3}
        waitDuration: ${FRONTEND_RETRY_WAIT_DURATION:500ms}
        metrics:
          enabled: true
  bulkhead:
    instances:
      "*":
        metrics:
          enabled: true
  ratelimiter:
    instances:
      "*":
        metrics:
          enabled: true

logging:
  level:
    root: INFO
    com.example.resilience_library: DEBUG

# Configuración de credenciales para el repositorio de configuración.
# Aunque el repositorio es público, para realizar operaciones de escritura (commit & push)
# es necesario autenticarse. Usa tu usuario de GitHub y un token de acceso personal (PAT).
config:
  repo:
    username: "Dvmc13"    # Reemplaza con tu usuario de GitHub.
    password: "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"        # Reemplaza con tu token de acceso personal (PAT).
