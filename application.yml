spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      enabled: true
    inetutils:
      preferredNetworks: 127.0.0.1
      ignoredInterfaces: eth0
  application:
    name: global-config  # Nombre global (opcional)

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"  # Se exponen todos los endpoints, incluido "circuitbreakers"
  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true
    prometheus:
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      "*":
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        metrics:
          enabled: true
  retry:
    instances:
      "*":
        maxAttempts: 3
        waitDuration: 500ms
        exponentialBackoffMultiplier: 2
        metrics:
          enabled: true
  ratelimiter:
    instances:
      "*":
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 100ms
        metrics:
          enabled: true

logging:
  level:
    root: INFO
    com.example.resilience_library: DEBUG

# Configuración para el monitoreo y reglas (sección propia de la librería)
resilience:
  monitor:
    interval: 30000
  services:
    - name: catalog-service
      host: ${CATALOG_SERVICE_HOST:localhost}
      port: ${CATALOG_SERVICE_PORT:8081}
      metrics:
        latencyEndpoint: /actuator/prometheus?name=http_server_requests_seconds_sum
        errorEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count
        countEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count
      rulesFile: https://raw.githubusercontent.com/Dvmc13/dynamic-resilience/main/rules/catalog-service-rules.yml

    - name: order-service
      host: ${ORDER_SERVICE_HOST:localhost}
      port: ${ORDER_SERVICE_PORT:8082}
      metrics:
        latencyEndpoint: /actuator/prometheus?name=http_server_requests_seconds_sum
        errorEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count
        countEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count
      rulesFile: https://raw.githubusercontent.com/Dvmc13/dynamic-resilience/main/rules/order-service-rules.yml
