spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      enabled: true
    inetutils:
      preferredNetworks: 127.0.0.1
      ignoredInterfaces: eth0
  application:
    name: global-config  # Puedes definir aquí el nombre global o dejarlo para cada aplicación si lo prefieres

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true
    prometheus:
      enabled: true

# Configuración de Resilience4j (parámetros específicos para cada servicio)
resilience4j:
  circuitbreaker:
    instances:
      catalog-service:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000ms
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000ms
        metrics:
          enabled: true
      order-service:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000ms
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000ms
        metrics:
          enabled: true
  retry:
    instances:
      order-service:
        maxAttempts: 3
        waitDuration: 500ms
        metrics:
          enabled: true
  bulkhead:
    instances:
      "*":
        metrics:
          enabled: true
  ratelimiter:
    instances:
      "*":
        metrics:
          enabled: true

logging:
  level:
    root: INFO
    com.example.resilience_library: DEBUG
