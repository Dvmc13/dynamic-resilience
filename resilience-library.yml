resilience:
  monitor:
    interval: 30s

  services:
    - name: catalog-service
      host: ${CATALOG_SERVICE_HOST:localhost}
      port: ${CATALOG_SERVICE_PORT:8081}
      metrics:
        latencyEndpoint: /actuator/prometheus?name=http_server_requests_seconds_sum
        errorEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count

    - name: order-service
      host: ${ORDER_SERVICE_HOST:localhost}
      port: ${ORDER_SERVICE_PORT:8082}
      metrics:
        latencyEndpoint: /actuator/prometheus?name=http_server_requests_seconds_sum
        errorEndpoint: /actuator/prometheus?name=http_server_requests_seconds_count

  rules:
    - service: catalog-service
      condition: "latency > 500"
      action: "circuitBreaker.open()"

    - service: catalog-service
      condition: "latency < 200"
      action: "retry.maxAttempts = 3"

    - service: order-service
      condition: "errorRate > 0.20"
      action: "circuitBreaker.open()"

    - service: order-service
      condition: "errorRate < 0.10"
      action: "circuitBreaker.close()"
